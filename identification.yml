openapi: 3.0.3

components:
  responses:
    SearchBadParamsException:
      description: "Bad request. Check your input data."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchBadParams"
  schemas:
    SearchBadParams:
      type: object
      properties:
        msg:
          type: string
          default: "Descriptor already calculated"
        statusCode:
          type: integer
          default: 400
        type:
          type: string
          default: "BadParamsException"
    PersonsPage:
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/Person"
        - $ref: './common.yml#/components/schemas/Page'
    Person:
      description: "Person response body: person ID, creation date, update date if any."
      allOf:
        - $ref: '#/components/schemas/PersonFields'
        - type: object
          properties:
            id:
              type: string
              format: uuid
              description: "Person ID. The list of persons is sorted by decreasing ID value."
            createdAt:
              type: string
              description: "Person creation date."
            updatedAt:
              type: string
              description: "Person update date."
            groups:
              type: array
              description: "List of groups this person belongs to."
              items:
                type: string
                format: uuid
    PersonFields:
      type: object
      description: "Person Request body: name and metadata."
      required:
        - name
      properties:
        name:
          type: string
          description: "Person's name."
        externalId:
          type: string
          description: "Person's ID, used for linking search results to an ID in an external system. Can be set when creating a Person, stored in the database, and included in the search to return only Persons with the specified ID. Optional."
        metadata:
          type: object
          additionalProperties: true
          description: "A free-form object containing person's extended attributes."
        groups:
          type: array
          description: "Groups a person should be placed to. If no group is specified in request, a Default group is created and the person is placed to it."
          items:
            type: string
            format: uuid
        expireAt:
          type: string
          description: "Person expiration date."
    PersonToUpdateFields:
      type: object
      description: "Person Request body: name and metadata."
      properties:
        externalId:
          type: string
          description: "Person's ID, used for linking search results to an ID in an external system. Can be set when creating a Person, stored in the database, and included in the search to return only Persons with the specified ID. Optional."
        name:
          type: string
          description: "Person's name."
        metadata:
          type: object
          additionalProperties: true
          description: "A free-form object containing person's extended attributes."
        groups:
          type: array
          description: "Groups a person should be placed to. If no group is specified in request, a Default group is created and the person is placed to it."
          items:
            type: string
            format: uuid

    ImageFields:
      type: object
      description: "Image in the request data, includes image and contentType."
      properties:
        tag:
          type: string
          description: "Session identificator, should be unique for each session."
        image:
          type: object
          description: "Uploaded image."
          properties:
            contentType:
              type: string
              description: "Original media type of the uploaded image."
            content:
              $ref: "./common.yml#/components/schemas/ImageData"
            imageUrl:
              type: string
              description: "Image URL."
            resizeOptions:
              $ref: "#/components/schemas/ResizeOptions"
        outputImageParams:
          $ref: "./common.yml#/components/schemas/OutputImageParams"
        detectAll:
          $ref: "./match.yml#/components/schemas/detectAll"
        threshold:
          type: number
          format: float
          description: "The similarity threshold."
        limit:
          type: integer
          description: "The maximum number of results to be returned."

    AddImageToPersonResponse:
      type: object
      description: "Image in the response."
      properties:
        id:
          type: string
          description: "Response image ID. The list is sorted by decreasing ID value."
        contentType:
          type: string
          description: "Original media type of the returned image."
        createdAt:
          type: string
          description: "Returned image creation date."
        path:
          type: string
          description: "Returned image path."
        url:
          type: string
          description: "Returned image URL."
        metadata:
          type: object
          additionalProperties: true
          description: "A free-form object containing person's extended attributes."

    AddImageToPersonRequest:
      type: object
      description: "Image in the request data, includes image and contentType."
      required:
        - image
      properties:
        tag:
          type: string
          description: "Session identificator."
        image:
          type: object
          description: "Uploaded image."
          properties:
            contentType:
              type: string
              description: "Original media type of the uploaded image."
            content:
              $ref: "./common.yml#/components/schemas/ImageData"
            imageUrl:
              type: string
              description: "Image URL."
            resizeOptions:
              $ref: "#/components/schemas/ResizeOptions"
        threshold:
          type: number
          format: float
          description: "The similarity threshold."
        limit:
          type: integer
          description: "The maximum number of results to be returned."

    ResizeOptions:
      type: object
      description: "Set to resize the original image."
      properties:
        width:
          type: integer
          description: "Resized image width, px."
        height:
          type: integer
          description: "Resized image height, px."
        quality:
          type: integer
          default: 100
          description: "Resized image quality, percent."

    Image:
      type: object
      description: "Image in the response."
      properties:
        id:
          type: string
          description: "Response image ID. The list is sorted by decreasing ID value."
        content:
          type: string
          format: base64
          description: "Base64-encoded image."
        contentType:
          type: string
          description: "Original media type of the returned image."
        createdAt:
          type: string
          description: "Returned image creation date."
        updatedAt:
          type: string
          description: "Returned image update date."
        path:
          type: string
          description: "Returned image path."
        url:
          type: string
          description: "Returned image URL."
        metadata:
          type: object
          additionalProperties: true
          description: "A free-form object containing person's extended attributes."

    GroupPage:
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: "Array of Groups that are found during the search."
              items:
                $ref: "#/components/schemas/Group"
        - $ref: './common.yml#/components/schemas/Page'
    Group:
      allOf:
        - $ref: '#/components/schemas/GroupResponse'
        - type: object
          description: "Additional group data in the response, includes id and createdAt."
          properties:
            id:
              type: string
              format: uuid
              description: "Group ID."
            createdAt:
              type: string
              description: "Group creation date."

    GroupResponse:
      type: object
      description: "Response group create data, includes name and metadata."
      properties:
        name:
          type: string
          description: "Group to create name."
        metadata:
          type: object
          additionalProperties: true
          description: "A free-form object containing group's extended attributes."

    GroupToCreate:
      type: object
      description: "Request body of the group to create data, includes name and metadata."
      required:
        - name
        - metadata
      properties:
        tag:
          type: string
          description: "Session identificator."
        name:
          type: string
          description: "Group to create name."
        metadata:
          type: object
          additionalProperties: true
          description: "A free-form object containing group's extended attributes."
