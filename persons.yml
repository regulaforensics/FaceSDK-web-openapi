openapi: 3.0.3
paths:
  /persons:
    get:
      tags:
        - person
      summary: Get persons
      operationId: get_all_persons
      parameters:
        - $ref: './common.yml#/components/parameters/page'
        - $ref: './common.yml#/components/parameters/size'
        - name: name
          in: query
          required: false
          description: Person name keywords
          schema:
            type: string
      responses:
        200:
          description: Successful operation, return all persons
          content:
            application/json:
              schema:
                $ref: "./identification.yml#/components/schemas/PersonsPage"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
    post:
      tags:
        - person
      summary: Create person
      operationId: create_person
      requestBody:
        description: Future person
        required: true
        content:
          application/json:
            schema:
              $ref: "./identification.yml#/components/schemas/PersonFields"
      responses:
        201:
          $ref: "#/components/responses/SuccessPerson"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
  /persons/{person_id}:
    parameters:
      - $ref: '#/components/parameters/person_id'
    get:
      tags:
        - person
      summary: Get person
      operationId: get_person
      responses:
        200:
          $ref: "#/components/responses/SuccessPerson"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
    put:
      tags:
        - person
      summary: Update person
      operationId: update_person
      requestBody:
        description: Metadata
        required: true
        content:
          application/json:
            schema:
              $ref: "./identification.yml#/components/schemas/PersonFields"
      responses:
        204:
          $ref: "#/components/responses/SuccessEmpty"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
    delete:
      tags:
        - person
      summary: Delete person
      operationId: delete_person
      responses:
        204:
          $ref: "#/components/responses/SuccessEmpty"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
  /persons/{person_id}/images:
    parameters:
      - $ref: '#/components/parameters/person_id'
    get:
      tags:
        - person
      summary: Get person images
      operationId: get_all_images_by_person_id
      parameters:
        - $ref: './common.yml#/components/parameters/page'
        - $ref: './common.yml#/components/parameters/size'
      responses:
        200:
          description: Successful operation; return all person images
          content:
            application/json:
              schema:
                $ref: "#/definitions/ImagePage"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
    post:
      tags:
        - person
      summary: Add person image
      operationId: add_image_to_person
      requestBody:
        description: Image to add
        required: true
        content:
          application/json:
            schema:
              $ref: "./identification.yml#/components/schemas/ImageFields"
      responses:
        200:
          description: Successful operation; return image id
          content:
            application/json:
              schema:
                $ref: "./identification.yml#/components/schemas/Image"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
  /persons/{person_id}/images/{image_id}:
    parameters:
      - $ref: '#/components/parameters/person_id'
    get:
      tags:
        - person
      summary: Get person image by id
      operationId: get_image_of_person
      parameters:
        - $ref: '#/components/parameters/image_id'
      responses:
        404:
          $ref: '#/components/responses/PersonNotFound'
          description: Such image don't exists
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
          description: Person have not such image
        200:
          description: Successful operation, return image
          content:
            image/*:
              schema:
                type: string
                format: binary
    delete:
      tags:
        - person
      summary: Delete image of person
      operationId: delete_image_of_person
      parameters:
        - $ref: '#/components/parameters/image_id'
      responses:
        204:
          $ref: "#/components/responses/SuccessEmpty"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          description: Person with person_id or image with image_id not found
          content:
            application/json:
              schema:
                $ref: "./common.yml#/components/schemas/OperationLog"
  /persons/{person_id}/groups:
    parameters:
      - $ref: '#/components/parameters/person_id'
    get:
      tags:
        - person
      summary: Get person groups
      operationId: get_all_groups_by_person_id
      parameters:
        - $ref: './common.yml#/components/parameters/page'
        - $ref: './common.yml#/components/parameters/size'
      responses:
        200:
          description: Successful operation; return all groups
          content:
            application/json:
              schema:
                $ref: "./identification.yml#/components/schemas/GroupPage"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'

components:
  parameters:
    person_id:
      name: person_id
      in: path
      description: Person id
      required: true
      schema:
        type: integer
    image_id:
      name: image_id
      in: path
      description: Image id
      required: true
      schema:
        type: integer
    page:
      name: page
      in: query
      description: Current page
      schema:
        type: integer
        default: 1
    size:
      name: size
      in: query
      description: Page size
      schema:
        type: integer
        default: 1000
  responses:
    SuccessEmpty:
      description: Successful operation, return nothing
    SuccessPerson:
      description: Successful operation; return person
      content:
        application/json:
          schema:
            $ref: "./identification.yml#/components/schemas/Person"
    PersonNotFound:
      description: Person with person_id not found
      content:
        application/json:
          schema:
            $ref: "./common.yml#/components/schemas/OperationLog"

definitions:
  ImagePage:
    allOf:
      - $ref: './common.yml#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: "./identification.yml#/components/schemas/Image"
  ImageMetadata:
    type: object
    properties:
      metadata:
        type: object
        additionalProperties: true