openapi: 3.0.3


paths:
  /persons:
    parameters:
      - $ref: './common.yml#/components/parameters/x-request'
    post:
      tags:
        - person
      summary: Create person
      operationId: create_person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./identification.yml#/components/schemas/PersonFields"
      responses:
        201:
          $ref: "#/components/responses/SuccessPerson"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
  /persons/{personId}:
    parameters:
      - $ref: '#/components/parameters/personId'
      - $ref: './common.yml#/components/parameters/x-request'
    get:
      tags:
        - person
      summary: Get person
      operationId: get_person
      responses:
        200:
          $ref: "#/components/responses/SuccessPerson"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
    put:
      tags:
        - person
      summary: Update person
      operationId: update_person
      requestBody:
        description: "Request body for the Person to update."
        required: true
        content:
          application/json:
            schema:
              $ref: "./identification.yml#/components/schemas/PersonToUpdateFields"
      responses:
        204:
          $ref: "#/components/responses/SuccessEmpty"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
    delete:
      tags:
        - person
      summary: Delete person
      operationId: delete_person
      responses:
        204:
          $ref: "#/components/responses/SuccessEmpty"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
  /persons/{personId}/images:
    parameters:
      - $ref: '#/components/parameters/personId'
      - $ref: './common.yml#/components/parameters/x-request'
    get:
      tags:
        - person
      summary: Get person images
      operationId: get_all_images_by_person_id
      parameters:
        - $ref: './common.yml#/components/parameters/page'
        - $ref: './common.yml#/components/parameters/size'
      responses:
        200:
          description: "Successful operation; return all person images."
          content:
            application/json:
              schema:
                $ref: "#/definitions/ImagePage"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
    post:
      tags:
        - person
      summary: Add person image
      operationId: add_image_to_person
      requestBody:
        description: "Image to add."
        required: true
        content:
          application/json:
            schema:
              $ref: "./identification.yml#/components/schemas/AddImageToPersonRequest"

      responses:
        200:
          description: "Successful operation; return image ID."
          content:
            application/json:
              schema:
                $ref: "./identification.yml#/components/schemas/AddImageToPersonResponse"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'
  /persons/{personId}/images/{imageId}:
    parameters:
      - $ref: '#/components/parameters/personId'
      - $ref: './common.yml#/components/parameters/x-request'
    get:
      tags:
        - person
      summary: Get person image by id
      operationId: get_image_of_person
      parameters:
        - $ref: '#/components/parameters/imageId'
      responses:
        404:
          $ref: '#/components/responses/PersonNotFound'
          description: "Such an image does not exists."
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
          description: "Person does not have such an image."
        200:
          description: "Successful operation, return image."
          content:
            image/*:
              schema:
                type: string
                format: binary
    delete:
      tags:
        - person
      summary: Delete image of person
      operationId: delete_image_of_person
      parameters:
        - $ref: '#/components/parameters/imageId'
      responses:
        204:
          $ref: "#/components/responses/SuccessEmpty"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          description: "Person with the personId or image with the imageId is not found."
          content:
            application/json:
              schema:
                $ref: "./common.yml#/components/schemas/OperationLog"
  /persons/{personId}/groups:
    parameters:
      - $ref: '#/components/parameters/personId'
      - $ref: './common.yml#/components/parameters/x-request'
    get:
      tags:
        - person
      summary: Get person groups
      operationId: get_all_groups_by_person_id
      parameters:
        - $ref: './common.yml#/components/parameters/page'
        - $ref: './common.yml#/components/parameters/size'
      responses:
        200:
          description: "Successful operation; return all groups."
          content:
            application/json:
              schema:
                $ref: "./identification.yml#/components/schemas/GroupPage"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        404:
          $ref: '#/components/responses/PersonNotFound'

components:
  parameters:
    personId:
      name: personId
      in: path
      description: "Person ID."
      required: true
      schema:
        format: uuid
        type: string
    imageId:
      name: imageId
      in: path
      description: "Image ID."
      required: true
      schema:
        string: uuid
        type: string
  responses:
    SuccessEmpty:
      description: "Successful operation, return nothing."
    SuccessPerson:
      description: "Successful operation; return person."
      content:
        application/json:
          schema:
            $ref: "./identification.yml#/components/schemas/Person"
    PersonNotFound:
      description: "Person with the personId is not found."
      content:
        application/json:
          schema:
            $ref: "./common.yml#/components/schemas/OperationLog"

definitions:
  ImagePage:
    allOf:
      - $ref: './common.yml#/components/schemas/Page'
      - type: object
        description: "Image page."
        properties:
          items:
            type: array
            items:
              $ref: "./identification.yml#/components/schemas/Image"
