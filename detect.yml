openapi: 3.0.3
paths:

  /detect:
    post:
      tags:
        - matching
      summary: "Detect facial coordinates"
      operationId: detect
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectRequest"
      responses:
        200:
          description: "Successful operation; return detection faces with their coordinates."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectResponse"
        403:
          $ref: "./common.yml#/components/responses/BadLicense"

components:
  schemas:
    DetectRequest:
      type: object
      properties:
        tag:
          type: string
        processParam:
          $ref: "./common.yml#/components/schemas/ProcessParam"
        image:
          $ref: "./common.yml#/components/schemas/ImageData"
        thumbnails:
          description: "Enable formatted detections' thumbnails in the response"
          type: boolean
          default: false
        attributes:
          description: "Enable face attributions detection, such as age or emotion and etc."
          type: boolean
          default: false
        onlyCentralFace:
          description: "True - main face; false - all faces."
          type: boolean
          default: false

    DetectResponse:
      allOf:
        - $ref: './common.yml#/components/schemas/FaceSDKResult'
        - type: object
          properties:
            results:
              $ref: '#/components/schemas/DetectResult'

    DetectResult:
      type: object
      required:
        - detections
      properties:
        detections:
          type: array
          items:
            $ref: "#/components/schemas/Detection"
        detectorType:
          description: "Internal."
          type: integer
        landmarksType:
          description: "Internal."
          type: integer
        scenario:
          description: "Scenario from Request processParam"
          $ref: "./common.yml#/components/schemas/FaceQualityScenarios"
        timer:
          type: float
          example: 0.84793560000000001

    Detection:
      type: object
      required:
        - landmarks
        - roi
      properties:
        crop:
          description: "Base64 of the aligned and cropped portrait. Returned if align is set."
          $ref: "./common.yml#/components/schemas/ImageData"
        attributes:
          type: object
          additionalProperties: true
          example:
            age: adult
            emotion: smile
        landmarks:
          description: "Main coordinates of the detected face (eyes, nose, lips, ears and etc.)."
          type: array
          items:
            description: "Cartesian points. First element - X-axis coordinate. Second element - Y-axis coordinate."
            type: array
            items:
              type: number
              example: [ x, y ]
          example: [ [ x, y ] ]
        quality:
          type: object
          description: "Field for checking the portrait quality. If it is not mentioned, no quality check is performed."
          properties:
            nonCompliant:
              type: array
              description: "The array of all the non-compliant assessment characteristics."
              items:
                $ref: "./common.yml#/components/schemas/FaceQualityConfigName"
              example: ["ImageWidthToHeight", "Yaw"]
            detailsGroups:
              description: "The array of the assessment results for each group of characteristics.
              Includes groupId, name, total, compliantCount."
              type: array
              items:
                $ref: "./common.yml#/components/schemas/QualityDetailsGroups"
            details:
              type: array
              description: "The array of the assessment characteristics that were set in the request. Includes name, range, status, unit, value."
              items:
                $ref: "./common.yml#/components/schemas/QualityDetail"

            score:
              type: float
              description: "Returns the estimated portrait quality assessment result,
               a number from 0 to 1, where 1 is for absolute compliance."
              example: -1.0
            timer:
              type: float
              example: 0.42036411166191101
        roi:
          $ref: "./common.yml#/components/schemas/FaceRectangular"
        thumbnail:
          $ref: "./common.yml#/components/schemas/Thumbnail"

    FaceAttribute:
      description: "Face attributes, such as age or emotion"
      type: string
      enum:
        - age
        - emotion
      x-enum-varnames:
        - AGE
        - EMOTION
