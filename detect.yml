openapi: 3.0.3
paths:

  /detect:
    post:
      tags:
        - matching
      summary: "Detect facial coordinates"
      operationId: detect
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectRequest"
      responses:
        200:
          description: "Successful operation; return detection faces with their coordinates."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectResponse"
        403:
          $ref: "./common.yml#/components/responses/BadLicense"

components:
  schemas:
    DetectRequest:
      type: object
      properties:
        image:
          $ref: "./common.yml#/components/schemas/ImageData"
        thumbnails:
          description: "Enable formatted detections' thumbnails in the response"
          type: boolean
          default: false
        attributes:
          description: "Enable face attributions detection, such as age or emotion and etc."
          type: boolean
          default: false
        onlyCentralFace:
          description: "True - main face; false - all faces."
          type: boolean
          default: false

    DetectResponse:
      allOf:
        - $ref: './common.yml#/components/schemas/FaceSDKResult'
        - type: object
          properties:
            results:
              $ref: '#/components/schemas/DetectResult'

    DetectResult:
      type: object
      required:
        - detections
      properties:
        detections:
          type: array
          items:
            $ref: "#/components/schemas/Detection"
        detectorType:
          description: "Internal."
          type: integer
        landmarksType:
          description: "Internal."
          type: integer

    Detection:
      type: object
      required:
        - landmarks
        - roi
      properties:
        attributes:
          $ref: "#/components/schemas/Attributes"
        faceQuality:
          $ref: "#/components/schemas/FaceQuality"
        landmarks:
          description: "Main coordinates of the detected face (eyes, nose, lips, ears and etc.)."
          type: array
          items:
            description: "Cartesian points. First element - X-axis coordinate. Second element - Y-axis coordinate."
            type: array
            items:
              type: number
              example: [ x, y ]
          example: [ [ x, y ] ]
        roi:
          $ref: "./common.yml#/components/schemas/FaceRectangular"
        rotationAngle:
          type: number
          format: float
          example: -0.841
        thumbnail:
          $ref: "./common.yml#/components/schemas/Thumbnail"

    FaceAttribute:
      description: "Face attributes, such as age or emotion"
      type: string
      enum:
        - age
        - emotion
      x-enum-varnames:
        - AGE
        - EMOTION

    FaceQuality:
      description: ""
      type: object
      properties:
        details:
          type: array
          description: ""
          items:
            $ref: "#/components/schemas/Detail"
        score:
          type: number
          format: float
          example:
            score: 0.528

    Detail:
      description: ""
      type: object
      properties:
        attribute:
          type: string
        score:
          type: number
          format: float
      example:
        attribute: "symmetry"
        score: 0.371

    Attributes:
      type: object
      additionalProperties: true
      properties:
        age:
          $ref: "#/components/schemas/AttributeValues"
        artMask:
          $ref: "#/components/schemas/AttributeValues"
        electronicDevice:
          $ref: "#/components/schemas/AttributeValues"
        emotion:
          $ref: "#/components/schemas/AttributeValues"
        eyes:
          type: object
          properties:
            left:
              $ref: "#/components/schemas/AttributeValues"
            right:
              $ref: "#/components/schemas/AttributeValues"
        livenessView:
          $ref: "#/components/schemas/AttributeValues"
        occlusion:
          type: object
          properties:
            foreheadGlasses:
              $ref: "#/components/schemas/AttributeValues"
            glasses:
              $ref: "#/components/schemas/AttributeValues"
            hat:
              $ref: "#/components/schemas/AttributeValues"
            medecineMask:
              $ref: "#/components/schemas/AttributeValues"
            mouth:
              $ref: "#/components/schemas/AttributeValues"
            occlusionOther:
              $ref: "#/components/schemas/AttributeValues"
            sunglasses:
              $ref: "#/components/schemas/AttributeValues"
        quality:
          type: object
          properties:
            blur:
              type: number
              format: float
            brightness:
              type: number
              format: float
            noise:
              type: number
              format: float
        shades:
          $ref: "#/components/schemas/AttributeValues"
        symmetry:
          $ref: "#/components/schemas/AttributeValues"

    AttributeValues:
      description: ""
      type: object
      properties:
        pred:
          type: number
        prob:
          type: number
        value:
          type: string



